# defend.ps1

# Function to test if DNS filtering is active on the system
function testDNSBlock {
    # Retrieve and display the original DNS servers of Ethernet 3 NIC
    $dnsServers = Get-DnsClientServerAddress -InterfaceAlias 'Ethernet 3' -AddressFamily IPv4
    $originalDNS = $dnsServers.ServerAddresses
    Write-Output "Original DNS Server(s) of Ethernet 3 NIC: $originalDNS"

    # Resolve the IP address for a known malware domain and check DNS filtering
    try {
        $hostEntry = [System.Net.Dns]::GetHostAddresses('malware.testcategory.com')
        $ipAddress = $hostEntry.IPAddressToString
        
        if ($ipAddress -ne '0.0.0.0') {
            Write-Output "The host is not using DNS filtering."
        } else {
            Write-Output "The host is using DNS filtering."
        }
    } catch {
        Write-Error "Error resolving the domain. It might be blocked or not exist."
    }
}

# Function to enable DNS over HTTPS (DoH) for Win11
function enableDoH {
    # Set EnableAutoDoH property in the specified registry key to 2
    Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Services\Dnscache\Parameters" -Name "EnableAutoDoH" -Value 2

    # Reboot the computer
    Restart-Computer
}

# Check the first argument of the command line
$argument = $args[0]

switch ($argument) {
    "DoH-test" {
        # Call testDNSBlock() function
        testDNSBlock
    }

    "DoH-enable" {
        # Call enableDoH() function
        enableDoH
    }

    default {
        # Output an error message if the first argument is unknown
        Write-Error "Unknown argument: $argument. Please use 'DoH-test' or 'DoH-enable'."
    }
}
